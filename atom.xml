<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>周轩衔的博客小屋</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-04-01T08:40:50.828Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>周轩衔</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>docker mongo数据的备份与恢复</title>
    <link href="http://yoursite.com/2021/04/01/%E6%9C%80%E5%A4%A7%E4%BD%99%E9%A2%9D%E6%B3%95%E8%A7%A3%E5%86%B3%E7%99%BE%E5%88%86%E6%AF%94%E5%92%8C%E4%B8%8D%E6%98%AF%E7%99%BE%E5%88%86%E7%99%BE%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2021/04/01/%E6%9C%80%E5%A4%A7%E4%BD%99%E9%A2%9D%E6%B3%95%E8%A7%A3%E5%86%B3%E7%99%BE%E5%88%86%E6%AF%94%E5%92%8C%E4%B8%8D%E6%98%AF%E7%99%BE%E5%88%86%E7%99%BE%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-04-01T08:18:03.000Z</published>
    <updated>2021-04-01T08:40:50.828Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="chang-jing">场景</span><a href="#chang-jing" class="header-anchor">#</a></h3><p>我们经常在画百分比图表时候，直接四舍五入会出现相加不等于100%，最大余额法解决百分比和不是100%的问题。</p><h3><span id="zen-me-bao-zheng-suo-you-zhan-bi-zhi-he-deng-yu-100">怎么保证所有占比之和等于100%</span><a href="#zen-me-bao-zheng-suo-you-zhan-bi-zhi-he-deng-yu-100" class="header-anchor">#</a></h3><p>echarts的饼图的百度通过传入数据自动算出每个项在总数当中所占的比例大小，且保证所有的比率相加等于100%，那他是如何计算百分比的呢。通过阅读<a href="https://github.com/apache/echarts/blob/master/src/util/number.ts" target="_blank" rel="noopener">源码</a>我们可以得知他使用最大余额法。</p><h3><span id="dai-ma">代码</span><a href="#dai-ma" class="header-anchor">#</a></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">3</span>, <span class="number">3</span>, <span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> aPercentage = getPercentValue(arr, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> bPercentage = getPercentValue(arr, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> cPercentage = getPercentValue(arr, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> percentageSum = aPercentage + bPercentage + cPercentage;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'get percentage'</span>, aPercentage, bPercentage, cPercentage, percentageSum);</span><br><span class="line"></span><br><span class="line"><span class="comment">//最大余额法解决百分比和不是100%的问题</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPercentValue</span>(<span class="params">arrList, index, precision</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!arrList[index]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!precision) precision = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">let</span> sum = arrList.reduce(<span class="function">(<span class="params">acc, val</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> acc + (<span class="built_in">isNaN</span>(val) ? <span class="number">0</span> : val);</span><br><span class="line">    &#125;, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (sum === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> digits = <span class="built_in">Math</span>.pow(<span class="number">10</span>, precision);</span><br><span class="line">    <span class="keyword">let</span> votesPerQuota = arrList.map(<span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">isNaN</span>(val) ? <span class="number">0</span> : val) / sum * digits * <span class="number">100</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> targetSeats = digits * <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">let</span> seats = votesPerQuota.map(<span class="function">(<span class="params">votes</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.floor(votes);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> currentSum = seats.reduce(<span class="function">(<span class="params">acc, val</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> acc + val;</span><br><span class="line">    &#125;, <span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> remainder = votesPerQuota.map(<span class="function"><span class="keyword">function</span> (<span class="params">votes, index</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> votes - seats[index];</span><br><span class="line">    &#125;);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">while</span> (currentSum &lt; targetSeats) &#123;</span><br><span class="line">        <span class="keyword">let</span> max = <span class="built_in">Number</span>.NEGATIVE_INFINITY;</span><br><span class="line">        <span class="keyword">let</span> maxId = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, len = remainder.length; i &lt; len; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (remainder[i] &gt; max) &#123;</span><br><span class="line">                max = remainder[i];</span><br><span class="line">                maxId = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ++seats[maxId];</span><br><span class="line">        remainder[maxId] = <span class="number">0</span>;</span><br><span class="line">        ++currentSum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> seats[index] / digits;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3&gt;&lt;span id=&quot;chang-jing&quot;&gt;场景&lt;/span&gt;&lt;a href=&quot;#chang-jing&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;我们经常在画百分比图表时候，直接四舍五入会出现相加不等于100%，最大余额法解决百分比和不是10
      
    
    </summary>
    
    
      <category term="Node" scheme="http://yoursite.com/categories/Node/"/>
    
    
      <category term="Node" scheme="http://yoursite.com/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>docker mongo数据的备份与恢复</title>
    <link href="http://yoursite.com/2021/03/24/docker%20mongo%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/"/>
    <id>http://yoursite.com/2021/03/24/docker%20mongo%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</id>
    <published>2021-03-24T10:18:03.000Z</published>
    <updated>2021-03-24T10:25:38.810Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>进入docker mongo容器 bash</p><p><code>docker exec -it mongo_server bash</code></p></li><li><p>新建文件夹</p><p><code>mkdir -p /opt/mongodbData/crm/</code></p></li><li><p>退出到真机，拷贝本地文件到容器</p><p><code>docker cp D:\DMAI\code\dump_0305\crm mongodb_server:/opt/mongodbData</code></p></li><li><p>恢复数据到mongo数据库</p><p><code>mongorestore -h localhost:27017 -d tongdake --dir opt/mongodbData/crm/ -u admin -p 123456</code></p></li><li><p>备份数据库的数据</p><p><code>mongodump -h 127.0.0.1 -d tdk-ssp -o /opt/dumpData -u admin -p 123456</code></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入docker mongo容器 bash&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker exec -it mongo_server bash&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新建文件夹&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir -p /opt/mo
      
    
    </summary>
    
    
      <category term="mongodb" scheme="http://yoursite.com/categories/mongodb/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>nodejs刷上千万数据量脚本代码</title>
    <link href="http://yoursite.com/2021/01/22/nodejs%E5%88%B7%E4%B8%8A%E5%8D%83%E4%B8%87%E6%95%B0%E6%8D%AE%E9%87%8F%E8%84%9A%E6%9C%AC%E4%BB%A3%E7%A0%81/"/>
    <id>http://yoursite.com/2021/01/22/nodejs%E5%88%B7%E4%B8%8A%E5%8D%83%E4%B8%87%E6%95%B0%E6%8D%AE%E9%87%8F%E8%84%9A%E6%9C%AC%E4%BB%A3%E7%A0%81/</id>
    <published>2021-01-22T07:45:12.000Z</published>
    <updated>2021-03-30T06:05:25.657Z</updated>
    
    <content type="html"><![CDATA[<p>​        很多时候我们需要处理上千万的数据问题，比如数据统计分析、报表处理、数据迁移、数据清洗等等应用场景，以下的代码是使用typescript编写的一个高性能脚本，以mongoDB的主键id索引不断读取数据。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; connect, ObjectId, Db &#125; <span class="keyword">from</span> <span class="string">'mongodb'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; find, hasIn, isEmpty, omit &#125; <span class="keyword">from</span> <span class="string">'lodash'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> HFS_DB_URI = process.env.HFS_DB || <span class="string">''</span>;</span><br><span class="line"><span class="keyword">const</span> SXB_DB_URI = process.env.SXB_DB || <span class="string">''</span>;</span><br><span class="line"><span class="keyword">let</span> HfsDb: Db, SxbDb: Db;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> WxUserCollection: <span class="built_in">string</span> = <span class="string">'@WxUser'</span>;</span><br><span class="line"><span class="keyword">const</span> WxUserMemberCollection: <span class="built_in">string</span> = <span class="string">'@WxUserMember'</span>;</span><br><span class="line"><span class="keyword">const</span> HfsUserCollection: <span class="built_in">string</span> = <span class="string">'@User'</span>;</span><br><span class="line"><span class="keyword">const</span> HfsUserExtendCollection: <span class="built_in">string</span> = <span class="string">'@UserExtend'</span>;</span><br><span class="line"><span class="keyword">const</span> HfsStudentExtendCollection: <span class="built_in">string</span> = <span class="string">'@StudentExtend'</span>;</span><br><span class="line"><span class="keyword">const</span> limit: <span class="built_in">number</span> = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getSxbWxUserMemberFromHfsDb</span>(<span class="params">sxbUsers: SxbUser[]</span>): <span class="title">Promise</span>&lt;</span>&#123; wxUserMembers: WxUserMember[], sxbUserExtends: HfsUserExtend[] &#125;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> wxUserMembers: WxUserMember[] = [], sxbUserExtends: HfsUserExtend[] = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> hfsUserIds: <span class="built_in">any</span>[] = sxbUsers.filter(<span class="function"><span class="params">u</span> =&gt;</span> hasIn(u, <span class="string">'hfs_id'</span>) &amp;&amp; u.hfs_id.length &gt;= <span class="number">12</span> &amp;&amp; u.hfs_id.length &lt;= <span class="number">24</span>).map(<span class="function"><span class="params">u</span> =&gt;</span> <span class="keyword">new</span> ObjectId(u.hfs_id));</span><br><span class="line">    <span class="comment">// userId =&gt; studentId</span></span><br><span class="line">    <span class="keyword">const</span> HfsUsers: HfsUser[] = (<span class="keyword">await</span> HfsDb.collection(HfsUserCollection)</span><br><span class="line">        .find(&#123; _id: &#123; $<span class="keyword">in</span>: hfsUserIds &#125; &#125;, &#123; projection: &#123; <span class="string">'[~student]'</span>: <span class="number">1</span>, <span class="string">'[student]'</span>: <span class="number">1</span> &#125; &#125;)</span><br><span class="line">        .toArray())</span><br><span class="line">        .filter(<span class="function"><span class="params">d</span> =&gt;</span> hasIn(d, <span class="string">'[~student]'</span>) || hasIn(d, <span class="string">'[student]'</span>)).map(<span class="function"><span class="params">d</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> item = (&#123; _id: <span class="string">`<span class="subst">$&#123;d._id&#125;</span>`</span>, studentId: (d[<span class="string">'[student]'</span>] ? d[<span class="string">'[student]'</span>] : d[<span class="string">'[~student]'</span>])[<span class="number">0</span>].peer &#125;);</span><br><span class="line">            <span class="keyword">return</span> item;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="keyword">const</span> HfsUserExtends: HfsUserExtend[] = <span class="keyword">await</span> HfsDb.collection(HfsUserExtendCollection)</span><br><span class="line">        .find(&#123; _id: &#123; $<span class="keyword">in</span>: hfsUserIds &#125; &#125;, &#123; projection: &#123; province_id: <span class="number">1</span>, province: <span class="number">1</span>, start_year: <span class="number">1</span>, is_han: <span class="number">1</span>, high_school: <span class="number">1</span> &#125; &#125;)</span><br><span class="line">        .toArray();</span><br><span class="line">    <span class="keyword">const</span> studentIds: ObjectId[] = HfsUsers.map(<span class="function"><span class="params">s</span> =&gt;</span> s.studentId);</span><br><span class="line">    <span class="comment">// studentId =&gt; [shengya_member]</span></span><br><span class="line">    <span class="keyword">const</span> studentExtends: HfsStudentExtend[] = (<span class="keyword">await</span> HfsDb.collection(HfsStudentExtendCollection)</span><br><span class="line">        .find(&#123; _id: &#123; $<span class="keyword">in</span>: studentIds &#125; &#125;, &#123; projection: &#123; <span class="string">'[shengya_member]'</span>: <span class="number">1</span> &#125; &#125;)</span><br><span class="line">        .toArray())</span><br><span class="line">        .filter(<span class="function"><span class="params">d</span> =&gt;</span> hasIn(d, <span class="string">'[shengya_member]'</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> &#123; _id, hfs_id &#125; of sxbUsers) &#123;</span><br><span class="line">        <span class="keyword">const</span> hfsUser: HfsUser | <span class="literal">undefined</span> = find(HfsUsers, <span class="function"><span class="params">u</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;u._id&#125;</span>`</span> === <span class="string">`<span class="subst">$&#123;hfs_id&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">if</span> (hfsUser) &#123;</span><br><span class="line">            <span class="keyword">const</span> studentExtend: HfsStudentExtend | <span class="literal">undefined</span> = find(studentExtends, <span class="function"><span class="params">s</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;s._id&#125;</span>`</span> === <span class="string">`<span class="subst">$&#123;hfsUser.studentId&#125;</span>`</span>);</span><br><span class="line">            <span class="keyword">if</span> (studentExtend) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> &#123; role, expire, create_time &#125; of studentExtend[<span class="string">'[shengya_member]'</span>]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (role === <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">if</span> (role === <span class="number">99</span> &amp;&amp; !expire) expire = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2050/1/1'</span>);</span><br><span class="line">                    wxUserMembers.push(<span class="keyword">new</span> WxUserMember(<span class="string">`<span class="subst">$&#123;_id&#125;</span>`</span>, role, expire, create_time));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> hfsUserExtend: HfsUserExtend = find(HfsUserExtends, <span class="function"><span class="params">ue</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;ue._id&#125;</span>`</span> === hfs_id);</span><br><span class="line">        <span class="keyword">if</span> (hfsUserExtend &amp;&amp; </span><br><span class="line">            (hasIn(hfsUserExtend, <span class="string">'province_id'</span>) || hasIn(hfsUserExtend, <span class="string">'province'</span>) || hasIn(hfsUserExtend, <span class="string">'start_year'</span>) || hasIn(hfsUserExtend, <span class="string">'is_han'</span>) || hasIn(hfsUserExtend, <span class="string">'high_school'</span>))</span><br><span class="line">        ) &#123;</span><br><span class="line">            <span class="keyword">const</span> temp: HfsUserExtend = <span class="built_in">Object</span>.assign(omit(hfsUserExtend, <span class="string">'start_year'</span>), &#123; _id: <span class="keyword">new</span> ObjectId(_id) &#125;);</span><br><span class="line">            hfsUserExtend.start_year &amp;&amp; (temp.year = hfsUserExtend.start_year);</span><br><span class="line">            sxbUserExtends.push(temp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; wxUserMembers, sxbUserExtends &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">updateOrInsertMany</span>(<span class="params">wxUserMembers: WxUserMember[]</span>): <span class="title">Promise</span>&lt;</span>&#123; insertedCount: <span class="built_in">number</span>, updatedCount: <span class="built_in">number</span> &#125;&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> insertedCount = <span class="number">0</span>, updatedCount = <span class="number">0</span>, total = wxUserMembers.length, num = limit / <span class="number">2</span>, round = <span class="built_in">Math</span>.ceil(total / num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= round; i++) &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="built_in">Promise</span>.all(wxUserMembers.splice(<span class="number">0</span>, num).map(<span class="function"><span class="params">m</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> SxbDb.collection(WxUserMemberCollection).findOneAndUpdate(m, &#123; $<span class="keyword">set</span>: m &#125;, &#123; upsert: <span class="literal">true</span>, returnOriginal: <span class="literal">true</span> &#125;).then((<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (result.value) updatedCount += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> insertedCount += <span class="number">1</span>;</span><br><span class="line">            &#125;))</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123; insertedCount, updatedCount &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!HFS_DB_URI) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'缺少HFS_DB启动参数'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!SXB_DB_URI) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'缺少SXB_DB启动参数'</span>);</span><br><span class="line"></span><br><span class="line">        HfsDb = <span class="keyword">await</span> (<span class="keyword">await</span> connect(HFS_DB_URI, &#123; useUnifiedTopology: <span class="literal">true</span> &#125;)).db();</span><br><span class="line">        <span class="built_in">console</span>.info(<span class="string">`connect HFS_DB successfully`</span>);</span><br><span class="line">        SxbDb = <span class="keyword">await</span> (<span class="keyword">await</span> connect(SXB_DB_URI, &#123; useUnifiedTopology: <span class="literal">true</span> &#125;)).db();</span><br><span class="line">        <span class="built_in">console</span>.info(<span class="string">`connect SXB_DB successfully`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> query = &#123;&#125;;</span><br><span class="line">        <span class="keyword">for</span> (; ;) &#123;</span><br><span class="line">            <span class="comment">// 获取limit个升学宝用户</span></span><br><span class="line">            <span class="keyword">const</span> sxbUsers: SxbUser[] = <span class="keyword">await</span> SxbDb.collection(WxUserCollection).find(query, &#123; projection: &#123; hfs_id: <span class="number">1</span> &#125; &#125;).limit(limit).toArray();</span><br><span class="line"></span><br><span class="line">            <span class="built_in">console</span>.time(<span class="string">"********************************** 升学宝从好分数数据库迁移会员 **********************************"</span>);</span><br><span class="line">            <span class="comment">// 获取好分数对应的升学宝会员</span></span><br><span class="line">            <span class="keyword">let</span> &#123;</span><br><span class="line">                wxUserMembers, sxbUserExtends</span><br><span class="line">            &#125; = <span class="keyword">await</span> getSxbWxUserMemberFromHfsDb(sxbUsers);</span><br><span class="line">            <span class="keyword">if</span> (!isEmpty(wxUserMembers)) &#123;</span><br><span class="line">                <span class="keyword">const</span> MODE = process.env.MODE || <span class="string">'u'</span>; <span class="comment">// u = 不存在就添加，存在就更新    i = 直接批量添加</span></span><br><span class="line">                MODE === <span class="string">'i'</span> &amp;&amp; <span class="keyword">await</span> SxbDb.collection(WxUserMemberCollection).insertMany(wxUserMembers).then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">console</span>.info(<span class="string">`增加会员记录: <span class="subst">$&#123;result.insertedCount&#125;</span>`</span>)</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                MODE === <span class="string">'u'</span> &amp;&amp; <span class="keyword">await</span> updateOrInsertMany(wxUserMembers).then((<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">console</span>.info(<span class="string">`更新已存在会员记录: <span class="subst">$&#123;result.updatedCount&#125;</span> - 增加会员记录: <span class="subst">$&#123;result.insertedCount&#125;</span>`</span>);</span><br><span class="line">                &#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">console</span>.timeEnd(<span class="string">"********************************** 升学宝从好分数数据库迁移会员 **********************************"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">console</span>.time(<span class="string">"********************************** 升学宝从好分数数据库迁移用户信息 **********************************"</span>);</span><br><span class="line">            <span class="keyword">if</span> (!isEmpty(sxbUserExtends)) &#123;</span><br><span class="line">                <span class="keyword">let</span> count = <span class="number">0</span>, updates = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> sxbUserExtend of sxbUserExtends) &#123;</span><br><span class="line">                    updates.push(SxbDb.collection(WxUserCollection).updateOne(&#123; _id: sxbUserExtend._id &#125;, &#123; $<span class="keyword">set</span>: omit(sxbUserExtend, <span class="string">'_id'</span>) &#125;).then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">                        count += result.matchedCount;</span><br><span class="line">                    &#125;));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">await</span> <span class="built_in">Promise</span>.all(updates).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">console</span>.error(err);</span><br><span class="line">                    <span class="built_in">console</span>.log(sxbUserExtends);</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="built_in">console</span>.info(<span class="string">`更新用户信息数: <span class="subst">$&#123;count&#125;</span>`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">console</span>.timeEnd(<span class="string">"********************************** 升学宝从好分数数据库迁移用户信息 **********************************"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sxbUsers.length === <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            query = &#123; _id: &#123; $gt: sxbUsers[sxbUsers.length - <span class="number">1</span>]._id &#125; &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        process.exit(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> WxUserMember &#123;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params"><span class="keyword">private</span> user_id: <span class="built_in">string</span>, <span class="keyword">private</span> role: <span class="built_in">number</span>, <span class="keyword">private</span> expire: <span class="built_in">Date</span> | <span class="built_in">number</span>, <span class="keyword">private</span> create_time: <span class="built_in">Date</span> | <span class="built_in">number</span> = <span class="built_in">Date</span>.now()</span>) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> SxbUser &#123;</span><br><span class="line">    _id: ObjectId;</span><br><span class="line">    hfs_id: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> HfsUser &#123;</span><br><span class="line">    _id: <span class="built_in">string</span>;</span><br><span class="line">    studentId: ObjectId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> HfsUserExtend &#123;</span><br><span class="line">    _id?: ObjectId;</span><br><span class="line">    province_id: <span class="built_in">number</span>;</span><br><span class="line">    province: <span class="built_in">string</span>;</span><br><span class="line">    start_year?: <span class="built_in">number</span>;</span><br><span class="line">    is_han: <span class="built_in">boolean</span>;</span><br><span class="line">    high_school: <span class="built_in">string</span>;</span><br><span class="line">    year: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> HfsStudentExtend &#123;</span><br><span class="line">    _id: ObjectId,</span><br><span class="line">    <span class="string">'[shengya_member]'</span>: &#123;</span><br><span class="line">        role: <span class="built_in">number</span>,</span><br><span class="line">        expire: <span class="built_in">Date</span>,</span><br><span class="line">        create_time: <span class="built_in">Date</span></span><br><span class="line">    &#125;[]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​        很多时候我们需要处理上千万的数据问题，比如数据统计分析、报表处理、数据迁移、数据清洗等等应用场景，以下的代码是使用typescript编写的一个高性能脚本，以mongoDB的主键id索引不断读取数据。&lt;/p&gt;
&lt;figure class=&quot;highligh
      
    
    </summary>
    
    
      <category term="Node" scheme="http://yoursite.com/categories/Node/"/>
    
    
      <category term="Node" scheme="http://yoursite.com/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>2021加油吧,打工人</title>
    <link href="http://yoursite.com/2021/01/22/2021%E5%8A%A0%E6%B2%B9%E5%90%A7-%E6%89%93%E5%B7%A5%E4%BA%BA/"/>
    <id>http://yoursite.com/2021/01/22/2021%E5%8A%A0%E6%B2%B9%E5%90%A7-%E6%89%93%E5%B7%A5%E4%BA%BA/</id>
    <published>2021-01-22T06:50:48.000Z</published>
    <updated>2021-03-24T09:50:38.774Z</updated>
    
    <content type="html"><![CDATA[<p>​        2020年，充满魔幻的一年如白驹过隙在指缝间溜走了。过去的一年干了很多事情，写了很多代码，也得到了很多人的认可，也错过了很多人和事情，有满足也有缺憾。2021年，我应该怎么样去度过呢？</p><p>​        我给自己定了几件事情：去一趟旅行、每周至少分享一面博客、静下心来专研技术、看几本书……想一想要做的事情挺多，能坚持下来也并不容易，2021年加油吧，打工人！对技术有追求的我，要变得更热爱生活！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​        2020年，充满魔幻的一年如白驹过隙在指缝间溜走了。过去的一年干了很多事情，写了很多代码，也得到了很多人的认可，也错过了很多人和事情，有满足也有缺憾。2021年，我应该怎么样去度过呢？&lt;/p&gt;
&lt;p&gt;​        我给自己定了几件事情：去一趟旅行、每周
      
    
    </summary>
    
    
      <category term="规划" scheme="http://yoursite.com/categories/%E8%A7%84%E5%88%92/"/>
    
    
      <category term="规划" scheme="http://yoursite.com/tags/%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>vscode快捷键</title>
    <link href="http://yoursite.com/2020/06/10/vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2020/06/10/vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2020-06-10T09:02:57.000Z</published>
    <updated>2021-03-24T09:50:38.779Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="vscode-chang-yong-kuai-jie-jian">vscode 常用快捷键</span><a href="#vscode-chang-yong-kuai-jie-jian" class="header-anchor">#</a></h2><ol><li>跳转到指定行 control + g</li><li>方法前进/后退 control + (+/-)</li><li>打开/关闭终端 control + ~</li><li>选中当前行 command + i</li><li>垂直选中列 shift + option + 某列</li><li>当前行前插入一行 shift + command + enter</li><li>当前行后插入一行 command + enter</li><li>光标移动到文档头/尾 command + ↑/↓</li><li>光标移动到行首/行尾 command + ←/→ 或 fn + ←/→</li><li>选中当前光标前/后文本 shift + command + ←/→</li><li>选中当前光标前/后单词 shift + option + ←/→</li><li>删除光标前的单词 option + delete</li><li>删除光标前的文本 command + delete</li><li>删除光标后的单词 fn + option + delete</li><li>删除光标后的文本 fn + command + delete</li><li>删除当前行 command + shift + k</li><li>文本上/下移动 option + ↑/↓</li><li>文本上/下复制 shift + option + ↑/↓</li><li>文本注释/取消 command + / 或 shift + option + a</li><li>选中文本格式化 command + k 后 command + f</li><li>整个文档格式化 shift + option + f</li><li>文本左/右缩进 command + [/]</li><li>调换光标前后字符位置 control + t</li><li>将选中的文本合并到一行 control + j</li><li>撤销光标的移动和选择 command + u</li><li>相同文本创建多光标 command + d</li><li>不同文本创建多光标 command + option + ↑/↓</li><li>将光标移动到所有选中文本的行尾 shift + option + i</li><li>切换当前打开的文件 control + tab 或 control + 数字</li><li>切换最近打开的文件 command + p，不松 command 按 p 或 ↑/↓</li><li>显示/隐藏资源管理器 command + b</li><li>当前打开的项目中查找 command + shift + f</li><li>打开快捷键配置项 command + k，不松 command 按 s 或 command + shift + p,输入key，选择响应选项设置</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;vscode-chang-yong-kuai-jie-jian&quot;&gt;vscode 常用快捷键&lt;/span&gt;&lt;a href=&quot;#vscode-chang-yong-kuai-jie-jian&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h2
      
    
    </summary>
    
    
      <category term="开发工具" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="vscode" scheme="http://yoursite.com/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Go学习之环境安装和第一个helloWorld_day01</title>
    <link href="http://yoursite.com/2020/05/27/Go%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E7%AC%AC%E4%B8%80%E4%B8%AAhelloWorld_day01/"/>
    <id>http://yoursite.com/2020/05/27/Go%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E7%AC%AC%E4%B8%80%E4%B8%AAhelloWorld_day01/</id>
    <published>2020-05-27T10:07:55.000Z</published>
    <updated>2021-03-24T09:50:38.776Z</updated>
    
    <content type="html"><![CDATA[<ol><li>Go 语言环境安装</li></ol><ol start="2"><li><p>Go 语言支持以下系统：<br>Linux<br>FreeBSD<br>Mac OS X（也称为 Darwin）<br>Windows</p><p>安装包下载地址为：<a href="https://golang.org/dl/。" target="_blank" rel="noopener">https://golang.org/dl/。</a></p><p>如果打不开可以使用这个地址：<a href="https://golang.google.cn/dl/。" target="_blank" rel="noopener">https://golang.google.cn/dl/。</a></p></li></ol><ol start="3"><li><p>选择适合系统的版本进行下载</p><p> <img src="../images/image-20200527182902763.png" alt></p></li></ol><ol start="4"><li><p>将 /usr/local/go/bin 目录添加至PATH环境变量：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> PATH=$PATH:<span class="regexp">/usr/</span>local/go/bin</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong>MAC 系统下你可以使用 <strong>.pkg</strong> 结尾的安装包直接双击来完成安装，安装目录在 <strong>/usr/local/go/</strong> 下。</p></blockquote></li></ol><ol start="5"><li><p><code>go version</code> 查看安装的版本信息</p><p><img src="../images/image-20200527190051615.png" alt></p></li><li><p>编写hello world的第一个demo</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   fmt.Println(<span class="string">"Hello, World!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li><p>运行第一个demo</p><p><code>go run helloWorld.go</code></p></li><li><p>编译成二进制文件运行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> build helloWorld.<span class="keyword">go</span></span><br><span class="line"></span><br><span class="line">GOOS=linux <span class="keyword">go</span> build helloWorld.<span class="keyword">go</span>   <span class="comment">// linux</span></span><br><span class="line">GOOS=windows <span class="keyword">go</span> build helloWorld.<span class="keyword">go</span> <span class="comment">// windows</span></span><br><span class="line">GOOS=darwin <span class="keyword">go</span> build hello-world.<span class="keyword">go</span> <span class="comment">// mac</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;Go 语言环境安装&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;p&gt;Go 语言支持以下系统：&lt;br&gt;Linux&lt;br&gt;FreeBSD&lt;br&gt;Mac OS X（也称为 Darwin）&lt;br&gt;Windows&lt;/p&gt;
&lt;p&gt;安装包下载地址为：&lt;a h
      
    
    </summary>
    
    
      <category term="Go" scheme="http://yoursite.com/categories/Go/"/>
    
    
      <category term="Go" scheme="http://yoursite.com/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Node在密集型计算时候eventLoop堵塞</title>
    <link href="http://yoursite.com/2020/05/12/Node%E5%9C%A8%E5%AF%86%E9%9B%86%E5%9E%8B%E8%AE%A1%E7%AE%97%E6%97%B6%E5%80%99eventLoop%E5%A0%B5%E5%A1%9E/"/>
    <id>http://yoursite.com/2020/05/12/Node%E5%9C%A8%E5%AF%86%E9%9B%86%E5%9E%8B%E8%AE%A1%E7%AE%97%E6%97%B6%E5%80%99eventLoop%E5%A0%B5%E5%A1%9E/</id>
    <published>2020-05-12T08:20:39.000Z</published>
    <updated>2021-03-24T09:50:38.777Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="node-zai-mi-ji-xing-ji-suan-shi-hou-eventloop-du-sai">Node在密集型计算时候eventLoop堵塞</span><a href="#node-zai-mi-ji-xing-ji-suan-shi-hou-eventloop-du-sai" class="header-anchor">#</a></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">'moment'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(moment().format(<span class="string">'MMMM Do YYYY, h:mm:ss a'</span>) + <span class="string">' begin'</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(moment().format(<span class="string">'MMMM Do YYYY, h:mm:ss a'</span>) + <span class="string">' timeout1'</span>);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模拟计算密集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">1000000</span> ; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span> ; j &lt; <span class="number">100000</span> ; ++j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(moment().format(<span class="string">'MMMM Do YYYY, h:mm:ss a'</span>) + <span class="string">' timeout2'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(moment().format(<span class="string">'MMMM Do YYYY, h:mm:ss a'</span>) + <span class="string">' end'</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">May 12th 2020, 4:13:58 pm begin</span></span><br><span class="line"><span class="comment">May 12th 2020, 4:13:58 pm end</span></span><br><span class="line"><span class="comment">May 12th 2020, 4:13:58 pm timeout1</span></span><br><span class="line"><span class="comment">May 12th 2020, 4:15:02 pm timeout2  //注意这里的时间晚了好久</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;node-zai-mi-ji-xing-ji-suan-shi-hou-eventloop-du-sai&quot;&gt;Node在密集型计算时候eventLoop堵塞&lt;/span&gt;&lt;a href=&quot;#node-zai-mi-ji-xing-ji-suan-shi-
      
    
    </summary>
    
    
      <category term="Node" scheme="http://yoursite.com/categories/Node/"/>
    
    
      <category term="Node" scheme="http://yoursite.com/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>oracle实现流水号定时重置的问题</title>
    <link href="http://yoursite.com/2020/05/10/oracle%E5%AE%9E%E7%8E%B0%E6%B5%81%E6%B0%B4%E5%8F%B7%E5%AE%9A%E6%97%B6%E9%87%8D%E7%BD%AE%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2020/05/10/oracle%E5%AE%9E%E7%8E%B0%E6%B5%81%E6%B0%B4%E5%8F%B7%E5%AE%9A%E6%97%B6%E9%87%8D%E7%BD%AE%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2020-05-10T15:43:51.000Z</published>
    <updated>2021-03-24T09:50:38.778Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://user-gold-cdn.xitu.io/2019/8/2/16c50206265f4989?w=600&h=450&f=png&s=288572" alt></p><h1><span id="shu-li">梳理</span><a href="#shu-li" class="header-anchor">#</a></h1><p>流水号的递增是我们在开发中经常会遇到的问题，我们可以通过序列实现。通过定时任务执行存储过程定时去重置序列的起始数字以及增量的值。</p><h1><span id="cun-chu-guo-cheng">存储过程</span><a href="#cun-chu-guo-cheng" class="header-anchor">#</a></h1><p>入参 V_SEQNAME 是传递要重置的序列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure SEQ_RESET(V_SEQNAME varchar2) as</span><br><span class="line">  N    number(10);</span><br><span class="line">  TSQL varchar2(100);</span><br><span class="line">begin</span><br><span class="line">  execute immediate &#39;select &#39; || V_SEQNAME || &#39;.nextval from dual&#39;</span><br><span class="line">    into N;</span><br><span class="line">  N    :&#x3D; -N;</span><br><span class="line">  TSQL :&#x3D; &#39;alter sequence &#39; || V_SEQNAME || &#39; increment by &#39; || N;</span><br><span class="line">  execute immediate TSQL;</span><br><span class="line">  execute immediate &#39;select &#39; || V_SEQNAME || &#39;.nextval from dual&#39;</span><br><span class="line">    into N;</span><br><span class="line">  TSQL :&#x3D; &#39;alter sequence &#39; || V_SEQNAME || &#39; increment by 1&#39;;</span><br><span class="line">  execute immediate TSQL;</span><br><span class="line">end SEQ_RESET;</span><br></pre></td></tr></table></figure><h1><span id="xin-jian-xu-lie-biao">新建序列表</span><a href="#xin-jian-xu-lie-biao" class="header-anchor">#</a></h1><p><img src="https://user-gold-cdn.xitu.io/2019/8/2/16c50143727909a5?w=1113&h=458&f=png&s=57976" alt></p><h1><span id="ding-shi-ren-wu">定时任务</span><a href="#ding-shi-ren-wu" class="header-anchor">#</a></h1><p>新建一个定时任务，控制好要重置的时间，可以每时每天每个月等等执行重置的存储过程，达到重置序列的目的，VINDA_SEQ为序列表。<br><img src="https://user-gold-cdn.xitu.io/2019/8/2/16c5011562dcee00?w=1120&h=483&f=png&s=60804" alt></p><h1><span id="shi-yong">使用</span><a href="#shi-yong" class="header-anchor">#</a></h1><p>在记录的新建的before insert的触发器里面将序列的值写入到记录的字段，<code>select VINDA_SEQ.nextval into nextcode from sys.dual;</code> 赋值给变量nextcode，然后 <code>:new.ATTRIBUTE5:=nextcode;ATTRIBUTE5</code>保存着流水号的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">create or replace trigger vinda_prodcheck_info_TRIGER</span><br><span class="line">  before insert on vinda_prodcheck_info   </span><br><span class="line">  for each row</span><br><span class="line">declare</span><br><span class="line">  nextid number;</span><br><span class="line">  nextcode number;</span><br><span class="line">begin</span><br><span class="line">  IF :new.RECORD_ID IS NULL or :new.RECORD_ID&#x3D;0 THEN </span><br><span class="line">    select vinda_prodcheck_info_SEQ.nextval </span><br><span class="line">    into nextid</span><br><span class="line">    from sys.dual;</span><br><span class="line">    select VINDA_SEQ.nextval </span><br><span class="line">    into nextcode</span><br><span class="line">    from sys.dual;</span><br><span class="line">    :new.RECORD_ID:&#x3D;nextid;</span><br><span class="line">    :new.ATTRIBUTE5:&#x3D;nextcode;</span><br><span class="line">  end if;</span><br><span class="line">end vinda_prodcheck_info_TRIGER;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2019/8/2/16c50206265f4989?w=600&amp;h=450&amp;f=png&amp;s=288572&quot; alt&gt;&lt;/p&gt;
&lt;h1&gt;&lt;span id=&quot;shu-li&quot;&gt;梳理&lt;/span&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="Database" scheme="http://yoursite.com/categories/Database/"/>
    
    
      <category term="oracle" scheme="http://yoursite.com/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://yoursite.com/2020/05/10/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2020/05/10/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-05-10T15:08:26.000Z</published>
    <updated>2021-03-24T09:50:38.775Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="shi-yong-pin-lu-hen-gao-de-ming-ling">使用频率很高的命令</span><a href="#shi-yong-pin-lu-hen-gao-de-ming-ling" class="header-anchor">#</a></h2><p><strong>拉取远程分支</strong></p><p><code>git checkout -b feature-keep-alive remotes/origin/feature-keep-alive</code> </p><p> <strong>查看git状态</strong></p><p><code>git status</code></p><p> <strong>暂存文件</strong></p><p><code>git add . / 文件</code>  </p><p><strong>提交代码</strong></p><p><code>git commit -m &#39;提交日志’</code></p><p><strong>推送代码到远程分支</strong></p><p><code>git push origin feature-keep-alive:feature-keep-alive</code></p><p><code>git push origin feature-keep-alive</code></p><p><strong>拉取代码</strong></p><p><code>git fetch</code></p><p><strong>删除本地分支</strong></p><p><code>git branch -D master</code>   </p><p> <strong>删除远程分支</strong></p><p><code>git push origin --delete feature-keep-alive</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;shi-yong-pin-lu-hen-gao-de-ming-ling&quot;&gt;使用频率很高的命令&lt;/span&gt;&lt;a href=&quot;#shi-yong-pin-lu-hen-gao-de-ming-ling&quot; class=&quot;header-anchor&quot;&gt;#&lt;
      
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode - 两数之和</title>
    <link href="http://yoursite.com/2020/05/10/LeetCode-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <id>http://yoursite.com/2020/05/10/LeetCode-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</id>
    <published>2020-05-10T04:47:18.000Z</published>
    <updated>2021-03-24T09:50:38.776Z</updated>
    
    <content type="html"><![CDATA[<p>给定一个整数数组 <code>nums</code> 和一个目标值 <code>target</code>，请你在该数组中找出和为目标值的那 <strong>两个</strong> 整数，并返回他们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</p><p><strong>示例:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">给定 nums &#x3D; [2, 7, 11, 15], target &#x3D; 9</span><br><span class="line">因为 nums[0] + nums[1] &#x3D; 2 + 7 &#x3D; 9</span><br><span class="line">所以返回 [0, 1]</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number[]&#125;</span> <span class="variable">nums</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">target</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;number[]&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> twoSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>, len = nums.length; i &lt; len; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> j = i + <span class="number">1</span>, len = nums.length; j &lt; len; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (target === (nums[i] + nums[j]))</span><br><span class="line">                <span class="keyword">return</span> [i, j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">twoSum([<span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>], <span class="number">26</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给定一个整数数组 &lt;code&gt;nums&lt;/code&gt; 和一个目标值 &lt;code&gt;target&lt;/code&gt;，请你在该数组中找出和为目标值的那 &lt;strong&gt;两个&lt;/strong&gt; 整数，并返回他们的数组下标。&lt;/p&gt;
&lt;p&gt;你可以假设每种输入只会对应一个答案。但是，数组中
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>2020年度规划</title>
    <link href="http://yoursite.com/2020/05/07/2020%E5%B9%B4%E5%BA%A6%E8%A7%84%E5%88%92/"/>
    <id>http://yoursite.com/2020/05/07/2020%E5%B9%B4%E5%BA%A6%E8%A7%84%E5%88%92/</id>
    <published>2020-05-07T05:37:33.000Z</published>
    <updated>2021-03-24T09:50:38.774Z</updated>
    
    <content type="html"><![CDATA[<p>2020 注定是一个不平凡的一年，2020年3月2日开始入职爱云校，开启了人生新的篇章。疫情在全世界大流行，社会笼罩着阴沉沉的气息，人心惶惶，中国经济也迅速按下了暂停键。随着中国疫情的逐渐被控制，国内各地复工在有条不紊地进行。2020年5月6日，我们也复工了。对我而言，新的工作环境、新的工作内容、新的工作伙伴会成为未来重要的人和事。桃李不言，下自成蹊。希望能够在新的岗位贡献自己的力量、实现自己的价值。</p><h3><span id="du-shu-ji-hua">读书计划</span><a href="#du-shu-ji-hua" class="header-anchor">#</a></h3><ul><li><input checked disabled type="checkbox"> ​     <a href="https://book.douban.com/subject/26356948/" target="_blank" rel="noopener">摆渡人</a></li></ul><ul><li><input checked disabled type="checkbox"> ​     <a href="https://book.douban.com/subject/26877752/" target="_blank" rel="noopener">恶意</a></li></ul><ul><li><input disabled type="checkbox"> ​     <a href="https://book.douban.com/subject/34434309/" target="_blank" rel="noopener">82年生的金智英</a></li></ul><ul><li><input disabled type="checkbox"> ​     <a href="https://book.douban.com/subject/27061123/" target="_blank" rel="noopener">MongoDB实战(第二版)</a></li></ul><ul><li><input disabled type="checkbox"> ​     <a href="https://book.douban.com/subject/25768396/" target="_blank" rel="noopener">深入浅出Node.js</a></li></ul><h3><span id="guan-ying-ji-hua">观影计划</span><a href="#guan-ying-ji-hua" class="header-anchor">#</a></h3><ul><li><input checked disabled type="checkbox"> ​      <a href="https://open.163.com/ted/" target="_blank" rel="noopener">网易公开课TED</a></li></ul><h3><span id="xue-xi-ji-hua">学习计划</span><a href="#xue-xi-ji-hua" class="header-anchor">#</a></h3><ul><li><input checked disabled type="checkbox"> ​      <a href="https://www.typescriptlang.org/docs/home.html" target="_blank" rel="noopener">TypeScript</a></li></ul><ul><li><input checked disabled type="checkbox"> ​      <a href="http://expressjs.com/" target="_blank" rel="noopener">Express</a></li></ul><ul><li><input checked disabled type="checkbox"> ​      <a href="https://eggjs.org/zh-cn/intro/quickstart.html" target="_blank" rel="noopener">Egg</a></li></ul><ul><li><input checked disabled type="checkbox"> ​      <a href="https://docs.nestjs.com/" target="_blank" rel="noopener">nestjs</a></li></ul><ul><li><input checked disabled type="checkbox"> ​      <a href="https://time.geekbang.org/column/intro/140?utm_source=pinpaizhuanqu&utm_medium=geektime&utm_campaign=guanwang&utm_term=guanwang&utm_content=0511" target="_blank" rel="noopener">Linux 性能优化实战</a></li></ul><h3><span id="bo-ke-ji-hua">博客计划</span><a href="#bo-ke-ji-hua" class="header-anchor">#</a></h3><p>​       技术分享 * 50</p><p>​       leetcode * 50</p><p>​       其他博客 * 10</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2020 注定是一个不平凡的一年，2020年3月2日开始入职爱云校，开启了人生新的篇章。疫情在全世界大流行，社会笼罩着阴沉沉的气息，人心惶惶，中国经济也迅速按下了暂停键。随着中国疫情的逐渐被控制，国内各地复工在有条不紊地进行。2020年5月6日，我们也复工了。对我而言，新的
      
    
    </summary>
    
    
      <category term="规划" scheme="http://yoursite.com/categories/%E8%A7%84%E5%88%92/"/>
    
    
      <category term="规划" scheme="http://yoursite.com/tags/%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
</feed>
